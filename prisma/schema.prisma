// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 사용자 모델
model User {
  id          String   @id @default(cuid())
  email       String   @unique
  phone       String?  @unique
  name        String
  password    String?  // 비밀번호 (소셜 로그인은 null 가능)
  avatar      String?
  userType    UserType @default(WORKER)
  verified    Boolean  @default(false)
  rating      Float    @default(0.0)
  totalEarned Int      @default(0)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 관계
  jobs        Job[]
  applications JobApplication[]
  reviews     Review[]         @relation("ReviewsReceived")
  givenReviews Review[]        @relation("ReviewsGiven")
  workSessions WorkSession[]

  @@map("users")
}

// 일자리 모델
model Job {
  id          String     @id @default(cuid())
  title       String
  description String
  category    JobCategory
  location    String
  wage        Int        // 시급 (원)
  workDate    DateTime
  workHours   Int        // 예상 작업 시간
  status      JobStatus  @default(OPEN)
  urgent      Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // 관계
  employer     User             @relation(fields: [employerId], references: [id])
  employerId   String
  applications JobApplication[]
  workSession  WorkSession?
  reviews      Review[]

  @@map("jobs")
}

// 지원 모델
model JobApplication {
  id        String            @id @default(cuid())
  status    ApplicationStatus @default(PENDING)
  message   String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  // 관계
  job      Job    @relation(fields: [jobId], references: [id])
  jobId    String
  worker   User   @relation(fields: [workerId], references: [id])
  workerId String

  @@unique([jobId, workerId])
  @@map("job_applications")
}

// 작업 세션 모델
model WorkSession {
  id         String    @id @default(cuid())
  startTime  DateTime
  endTime    DateTime?
  totalHours Float?
  totalPay   Int?
  status     SessionStatus @default(IN_PROGRESS)
  photos     String[]  // 작업 사진 URLs
  notes      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // 관계
  job      Job    @relation(fields: [jobId], references: [id])
  jobId    String @unique
  worker   User   @relation(fields: [workerId], references: [id])
  workerId String

  @@map("work_sessions")
}

// 리뷰 모델
model Review {
  id       String @id @default(cuid())
  rating   Int    // 1-5 별점
  comment  String
  createdAt DateTime @default(now())

  // 관계
  job        Job    @relation(fields: [jobId], references: [id])
  jobId      String
  reviewer   User   @relation("ReviewsGiven", fields: [reviewerId], references: [id])
  reviewerId String
  reviewee   User   @relation("ReviewsReceived", fields: [revieweeId], references: [id])
  revieweeId String

  @@map("reviews")
}

// Enums
enum UserType {
  WORKER
  EMPLOYER
}

enum JobCategory {
  CONSTRUCTION
  INTERIOR
  LOGISTICS
  FACTORY
  CLEANING
  DELIVERY
}

enum JobStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum SessionStatus {
  IN_PROGRESS
  COMPLETED
  CANCELLED
}