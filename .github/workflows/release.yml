name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: 'CHANGELOG.md'
          skip-version-file: true
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false

  build-artifacts:
    name: Build Release Artifacts
    runs-on: ${{ matrix.os }}
    needs: create-release
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [18.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: |
          npm run build || echo "No build script"
          cd frontend && npm ci --legacy-peer-deps && npm run build
          
      - name: Create archive
        run: |
          tar -czf onetime-${{ github.ref_name }}-${{ matrix.os }}.tar.gz \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.env \
            .
            
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./onetime-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          asset_name: onetime-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          asset_content_type: application/gzip

  publish-docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/onetime-backend:${{ github.ref_name }}
            ${{ secrets.DOCKER_USERNAME }}/onetime-backend:latest
            ghcr.io/${{ github.repository_owner }}/onetime-backend:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/onetime-backend:latest
            
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/onetime-frontend:${{ github.ref_name }}
            ${{ secrets.DOCKER_USERNAME }}/onetime-frontend:latest
            ghcr.io/${{ github.repository_owner }}/onetime-frontend:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/onetime-frontend:latest

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-artifacts, publish-docker]
    environment: production
    
    steps:
      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          npm install -g @railway/cli
          railway up --service backend --environment production
        continue-on-error: true
        
      - name: Trigger Vercel Deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          curl -X POST https://api.vercel.com/v1/integrations/deploy/${{ secrets.VERCEL_WEBHOOK }}
        continue-on-error: true
        
      - name: Send release notification
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            ðŸš€ New Release Deployed!
            Version: ${{ github.ref_name }}
            Environment: Production
            Backend: Railway
            Frontend: Vercel
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true