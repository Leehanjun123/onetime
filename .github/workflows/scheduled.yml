name: Scheduled Tasks

on:
  schedule:
    # 매일 오전 2시 (UTC)
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # 데이터베이스 백업
  database-backup:
    name: Database Backup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
      - name: Backup database
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          pg_dump $DATABASE_URL > backup_${TIMESTAMP}.sql
          
      - name: Upload backup to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl private --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BACKUP_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: '.'
        continue-on-error: true

  # 의존성 업데이트 체크
  dependency-updates:
    name: Check Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Check for updates
        run: |
          npx npm-check-updates -u --doctor
          cd frontend && npx npm-check-updates -u --doctor
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '[Auto] Update Dependencies'
          body: |
            This PR updates project dependencies to their latest versions.
            
            Please review the changes and ensure all tests pass before merging.
          branch: auto-update-dependencies
          delete-branch: true

  # 보안 스캔
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run npm audit
        run: |
          npm audit --json > npm-audit-backend.json || true
          cd frontend && npm audit --json > ../npm-audit-frontend.json || true
          
      - name: Upload audit results
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-${{ github.run_number }}
          path: |
            npm-audit-backend.json
            npm-audit-frontend.json
            
      - name: Check critical vulnerabilities
        run: |
          npm audit --audit-level=critical
          cd frontend && npm audit --audit-level=critical

  # 성능 모니터링
  performance-monitoring:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    
    steps:
      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://onetime-frontend.vercel.app/
            https://onetime-frontend.vercel.app/jobs
            https://onetime-frontend.vercel.app/profile
          uploadArtifacts: true
          temporaryPublicStorage: true
          
      - name: Check Core Web Vitals
        run: |
          echo "Checking Core Web Vitals..."
          # Add custom script to check web vitals thresholds

  # 오래된 데이터 정리
  cleanup-old-data:
    name: Cleanup Old Data
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Run cleanup script
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        run: |
          npm run cleanup:old-data || echo "No cleanup script found"
        continue-on-error: true

  # 통계 리포트 생성
  generate-reports:
    name: Generate Reports
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate usage statistics
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        run: |
          echo "Generating weekly reports..."
          # Add script to generate and email reports
        continue-on-error: true